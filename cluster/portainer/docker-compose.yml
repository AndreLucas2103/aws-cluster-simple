version: "3.2"

services:
  portainer:
    image: portainer/portainer-ce:2.20.3
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - data:/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - public
      - agent_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=public"
        - "traefik.http.routers.portainer.rule=Host(`portainer.cabral-andre-dev.site`)"
        - "traefik.http.routers.portainer.service=portainer"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
        - "traefik.http.routers.portainer.tls=true"
        - "traefik.http.routers.portainer.tls.certresolver=leresolver"
        # Edge
        - "traefik.http.routers.edge.rule=Host(`edge.cabral-andre-dev.site`)"
        - "traefik.http.routers.edge.service=edge"
        - "traefik.http.services.edge.loadbalancer.server.port=8000"
        - "traefik.http.routers.edge.tls=true"
        - "traefik.http.routers.edge.tls.certresolver=leresolver"

  agent:
    image: portainer/agent:2.20.3
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.agent
      # AGENT_PORT: 9001
      # LOG_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

networks:
  public:
    external: true
  agent_network:
    external: true

volumes:
  data:
